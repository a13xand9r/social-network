{"version":3,"sources":["pictures/Novikov.jpg","pictures/preloader.gif","modules/Content/Users/Users.module.css","modules/Content/Profile/MyWall/Post/Post.module.css","modules/Header/Header.module.css","modules/Content/Profile/Profile.module.css","modules/Navbar/nav.module.css","serviceWorker.js","api/api.js","redux/profile_reducer.js","validation/validation.js","redux/dialogs_reducer.js","redux/friends_reducer.js","redux/auth_reducer.js","redux/initial_reducer.js","redux/redux_store.js","modules/Navbar/nav.jsx","modules/Common/FormComponents.jsx","modules/Content/Dialogs/Dialogs.jsx","HOC/withAuthRedirect.js","modules/Content/Dialogs/DialogsContainer.jsx","modules/Common/Preloader.jsx","modules/Common/Pagination.jsx","modules/Content/Users/User.jsx","modules/Content/Users/Users.jsx","modules/Content/Users/UsersContainer.jsx","modules/Content/Profile/MyWall/Post/Post.jsx","modules/Content/Profile/MyWall/MyWall.jsx","modules/Content/Profile/MyWall/MyWallContainer.jsx","modules/Content/Profile/UserInfo.jsx","modules/Content/Profile/Profile.jsx","redux/selectors.js","modules/Content/Profile/ProfileContainer.jsx","modules/Header/Header.jsx","modules/Header/HeaderContainer.jsx","modules/Login/Login.jsx","App.js","index.js","modules/Content/Dialogs/Dialogs.module.css","modules/Common/FormComponents.module.css","pictures/user_man.png","App.module.css","modules/Common/Pagination.module.css","modules/Content/Profile/MyWall/MyWall.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Api","apiUrl","this","axiosInstance","axios","baseURL","withCredentials","headers","id","data","post","then","response","put","get","delete","usersAPI","followAPI","profileAPI","authAPI","getUsers","pageNumber","usersOnPage","follow","unFollow","getProfile","getStatus","updateStatus","status","getMe","login","form","logout","maxSymbols","initialState","profileData","fullName","contacts","photos","large","NovikovAva","postData","message","like","isFetching","profileIsFetching","type","setStatus","profile_reducer","state","action","newPost","dialogUsers","name","messageData","dialogs_reducer","messageBody","newMessageText","users","itemsOnPage","currentPage","totalUsers","FetchingFollowDisable","followUser","userId","followBool","toggleIsFetching","toggleIsFetchingFollow","friends_reducer","map","u","followed","totalCount","filter","email","isAuth","isAuthRequested","getAuthAC","getAuth","dispatch","a","async","resultCode","stopSubmit","_error","messages","auth_reducer","initialized","initial_reducer","reducers","combineReducers","profilePage","dialogsPage","friendsPage","auth","initial","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Nav","className","classes","nav","item","exact","to","activeClassName","active","fieldIsRequired","value","emailFieldIncludeDog","includes","DialogsTextArea","input","meta","props","hasRequiredError","error","touched","hasMaxSymbolsError","hasError","styles","fromControl","LoginInput","hasEmailDogError","Max30symbols","length","MessageReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","DialogItem","path","dialogItem","Dialog","Dialogs","dialogs","d","m","dialog_wrapper","dialogItems","dialog","sendMessage","mapStateToProps","withAuthRedirect","Component","RedirectComponent","params","React","connect","addMessageActionCreator","reset","withRouter","Preloader","style","width","src","preloader","alt","Pagination","pagesCount","Math","ceil","totalItems","pages","i","push","useState","currentPortion","setCurrentPortion","leftPositionPageNumber","portionSize","rightPositionPageNumber","portionsCount","paginationButton","onClick","p","activePage","e","getUsersOnClick","User","user","followUnFollow","small","user_man","disabled","some","Users","UsersContainer","items","changeCurrentPage","Post","likes","PostReduxForm","MyWall","posts","wall","addPost","postText","MyWallContainer","addPostActionCreator","UserInfo","editMode","setEditMode","statusBody","changeStatusBody","useEffect","userInfo","UserPhoto","onMouseLeave","editStatus","onChange","currentTarget","autoFocus","updateUserStatus","aboutMe","contact","facebook","vk","twitter","instagram","Profile","profile","getProfilePage","getUserId","getIsAuth","getIsAuthRequested","ProfileContainer","requestProfilePage","authId","getUserStatus","prevProps","prevState","Header","header","HeaderContainer","LoginReduxForm","App","initialApp","app_wrapper","page","app_wrapper_content","render","DialogsContainer","Login","ReactDOM","basename","process","getState","bind","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f63f1536.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Novikov.cad1081a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.9134df9c.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Users_item__2Hf94\",\"activePage\":\"Users_activePage__qN8Nt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__jThgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1BUW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"Profile_userInfo__2XlVE\",\"name\":\"Profile_name__xSVuN\",\"contacts\":\"Profile_contacts__1Mdw1\",\"contact\":\"Profile_contact__3kwwE\",\"editStatus\":\"Profile_editStatus__Exc58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__3hX6P\",\"item\":\"nav_item__2VHoJ\",\"active\":\"nav_active__3CQCZ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// @ts-nocheck\r\nimport * as axios from 'axios';\r\n\r\nclass Api {\r\n    constructor(apiUrl) {\r\n        this.axiosInstance = axios.create({\r\n            baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n            withCredentials: true,\r\n            headers: {\r\n                \"API-KEY\": \"cce64977-17ba-465b-8d32-0c7b57f1007e\"\r\n            }\r\n        });\r\n        this.apiUrl = apiUrl;\r\n    }\r\n    post(id = null, data = null) {\r\n        return this.axiosInstance.post(`/${this.apiUrl}/${id}`, data)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n    put(id = null, data = null) {\r\n        return this.axiosInstance.put(`/${this.apiUrl}/${id}`, data)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n    get(id) {\r\n        return this.axiosInstance.get(`/${this.apiUrl}/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n    delete(id) {\r\n        return this.axiosInstance.delete(`/${this.apiUrl}/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport let usersAPI   = new Api('users')\r\nexport let followAPI  = new Api('follow')\r\nexport let profileAPI = new Api('profile')\r\nexport let authAPI    = new Api('auth')\r\n\r\nusersAPI.getUsers = (pageNumber, usersOnPage) => usersAPI.get(`?page=${pageNumber}&count=${usersOnPage}`)\r\n\r\nfollowAPI.follow = (id) => followAPI.post(id)\r\nfollowAPI.unFollow = (id) => followAPI.delete(id)\r\n\r\nprofileAPI.getProfile   = (id)         => profileAPI.get(id)\r\nprofileAPI.getStatus    = (id)         => profileAPI.get('status/' + id)\r\nprofileAPI.updateStatus = (status)     => profileAPI.put('status', {status: status})\r\n\r\nauthAPI.getMe  = ()     => authAPI.get('me')\r\nauthAPI.login  = (form) => authAPI.post('login', form)\r\nauthAPI.logout = ()     => authAPI.delete('login')","import NovikovAva from '../pictures/Novikov.jpg';\r\nimport { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST             = 'ADD-POST';\r\nconst SET_USER_PROFILE     = 'CHANGE-SET_USER_PROFILE-MESSAGE';\r\nconst TOGGLE_IS_FETCHING   = 'PROFILE_IS_FETCHING';\r\nconst SET_STATUS           = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    profileData: {\r\n        fullName: 'Новиков Александр',\r\n        contacts: null,\r\n        photos: {\r\n            large: NovikovAva\r\n        }\r\n    },\r\n    status: \"\",\r\n    postData: [\r\n        { id: '1', message: 'Whats up!', like: '3' },\r\n        { id: '2', message: 'hey, YO, how are you doing', like: '0' },\r\n        { id: '3', message: 'Happy birthday to you broooooooooooooooooooooo', like: '20' },\r\n    ],\r\n    isFetching: false\r\n};\r\n\r\nconst profile_reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: '5',\r\n                message: action.form,\r\n                like: '0'\r\n            };\r\n            return {\r\n                ...state,\r\n                postData: [newPost,...state.postData],\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profileData: action.data\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING:{\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (form) => ({ type: ADD_POST, form });\r\nexport const setUserProfile = (data) => ({ type: SET_USER_PROFILE, data })\r\nexport const profileIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nexport const requestProfilePage = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(profileIsFetching(true));\r\n        let response = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response));\r\n        dispatch(profileIsFetching(false));\r\n    }\r\n}\r\nexport const getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response));\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (statusBody) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(statusBody)\r\n        if (response.resultCode === 0) {\r\n            dispatch(setStatus(statusBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default profile_reducer","\r\nexport const fieldIsRequired = (value) => {\r\n    if (value) return undefined\r\n    return 'This field is required'\r\n}\r\nexport const fieldIsFullCreator = (maxSymbols) => (value) => {\r\n    if (value.length > maxSymbols) return `${maxSymbols} is maximum symbols`\r\n    return undefined\r\n}\r\nexport const emailFieldIncludeDog = (value) => {\r\n    if (!value.includes('@')) return 'email is invalid'\r\n    return undefined\r\n}","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogUsers: [\r\n        { id: '1', name: 'Artem' },\r\n        { id: '2', name: 'Yulia' },\r\n        { id: '3', name: 'Yaric' },\r\n        { id: '4', name: 'Oleg' },\r\n    ],\r\n    messageData: [\r\n        { id: '1', message: 'Hi, how are you?' },\r\n        { id: '2', message: 'I\\'m good, thanks' },\r\n    ]\r\n};\r\n\r\nconst dialogs_reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_MESSAGE:{\r\n            let messageData = {\r\n                id: '5',\r\n                message: action.messageBody\r\n            }\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, messageData],\r\n                newMessageText: ''\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (messageBody) =>(\r\n    {type: ADD_MESSAGE, messageBody});\r\n\r\nexport default dialogs_reducer","import { usersAPI, followAPI } from \"../api/api\";\r\n\r\nconst FOLLOW                       = 'FOLLOW';\r\nconst SET_USERS                    = 'SET_USERS';\r\nconst TOGGLE_IS_FETCHING           = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FETCHING_FOLLOW    = 'TOGGLE_IS_FETCHING_FOLLOW';\r\nconst CHANGE_CURRENT_PAGE          = 'CHANGE_CURRENT_PAGE';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    //pagesCount: 1,\r\n    itemsOnPage: 30,\r\n    currentPage: 1,\r\n    totalUsers: 0,\r\n    isFetching: false,\r\n    FetchingFollowDisable: []\r\n};\r\n\r\nconst friends_reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (action.userId === u.id){\r\n                        return {...u, followed: action.followBool};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users],\r\n                totalUsers: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FETCHING_FOLLOW:\r\n            return {\r\n                ...state,\r\n                FetchingFollowDisable: action.isFetching \r\n                                         ? [...state.FetchingFollowDisable, action.userId]\r\n                                         : state.FetchingFollowDisable.filter(u => u!==action.userId)\r\n            }\r\n        case CHANGE_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const followUser             = (userId, followBool) => ({type: FOLLOW, userId, followBool});\r\nexport const setUsers               = (users, totalCount)  => ({type: SET_USERS, users, totalCount});\r\nexport const toggleIsFetching       = (isFetching)         => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFetchingFollow = (isFetching, userId) => ({type: TOGGLE_IS_FETCHING_FOLLOW, isFetching, userId});\r\nexport const changeCurrentPage      = (pageNumber)         => ({type: CHANGE_CURRENT_PAGE, pageNumber});\r\n\r\nexport const getUsers = (pageNumber, itemsOnPage) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(pageNumber, itemsOnPage)\r\n        .then(response => {\r\n            dispatch(setUsers(response.items, response.totalCount));\r\n            dispatch(changeCurrentPage(pageNumber));\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n    }\r\n}\r\n\r\nexport const followUnFollow = (userId, followed) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetchingFollow(true, userId));\r\n        if (!followed) {\r\n           followAPI.follow(userId)\r\n                .then(response => {\r\n                    dispatch(toggleIsFetchingFollow(false, userId));\r\n                    if (response.resultCode === 0) {\r\n                        dispatch(followUser(userId, true))\r\n                    }\r\n                })\r\n        } else {\r\n            followAPI.unFollow(userId)\r\n                .then(response => {\r\n                    dispatch(toggleIsFetchingFollow(false, userId));\r\n                    if (response.resultCode === 0) {\r\n                        dispatch(followUser(userId, false))\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport default friends_reducer","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst GET_AUTH       = 'ADD-GET_AUTH';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isAuthRequested: false\r\n};\r\n\r\nconst auth_reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_AUTH: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuthRequested: true,\r\n                isAuth: action.isAuth\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const getAuthAC = (userId, email, login, isAuth) => ({ type: GET_AUTH, data: {userId, email, login}, isAuth });\r\n\r\nexport const getAuth = () => async (dispatch) => {\r\n    let response = await authAPI.getMe()\r\n    if (response.resultCode === 0) {\r\n        let { id, email, login } = response.data;\r\n        dispatch(getAuthAC(id, email, login, true));\r\n    } else {\r\n        let { id, email, login } = response.data;\r\n        dispatch(getAuthAC(id, email, login, false));\r\n    }\r\n}\r\n\r\n\r\nexport const login = (form) => async (dispatch) => {\r\n    let response = await authAPI.login(form)\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        dispatch(stopSubmit('login', { _error: response.messages }))\r\n    }\r\n\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    await authAPI.logout()\r\n    dispatch(getAuthAC(null, null, null, false));\r\n\r\n}\r\n\r\nexport default auth_reducer","import { getAuth } from \"./auth_reducer\";\r\n\r\nconst INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst initial_reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case INITIALIZE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const initialSuccess = () => ({ type: INITIALIZE_SUCCESS });\r\n\r\nexport const initialApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuth())\r\n        promise.then(() => {\r\n            dispatch(initialSuccess())\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default initial_reducer","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profile_reducer from \"./profile_reducer\";\r\nimport dialogs_reducer from \"./dialogs_reducer\";\r\nimport friends_reducer from \"./friends_reducer\";\r\nimport initial_reducer from \"./initial_reducer\";\r\nimport auth_reducer from \"./auth_reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profile_reducer,\r\n    dialogsPage: dialogs_reducer,\r\n    friendsPage: friends_reducer,\r\n    auth       : auth_reducer,\r\n    initial    : initial_reducer,\r\n    form       : formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n    ));\r\n    \r\n//const store = createStore(reducer, /* preloadedState, */ compose(\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\r\nimport classes from './nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n    <nav className = {classes.nav}>\r\n        <div className = {classes.item}>\r\n            <NavLink exact to = '/profile' activeClassName = {classes.active}>My Profile</NavLink>\r\n        </div>\r\n        \r\n        {/* <div className = {classes.item}>\r\n           <NavLink to = '/friends' activeClassName = {classes.active}>My Friends</NavLink>\r\n        </div> */}\r\n        <div className = {classes.item}>\r\n           <NavLink to = '/users' activeClassName = {classes.active}>Users</NavLink>\r\n        </div>\r\n\r\n        <div className = {classes.item}>\r\n            <NavLink to = '/dialogs' activeClassName = {classes.active}>Message</NavLink>\r\n        </div>\r\n\r\n        <div className = {classes.item}>\r\n            <NavLink to = '/feed' activeClassName = {classes.active}>News</NavLink>\r\n        </div>\r\n        \r\n    </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport styles from './FormComponents.module.css'\r\n\r\nexport const DialogsTextArea = ({input, meta, ...props}) => {\r\n    let hasRequiredError = meta.error && meta.touched\r\n    let hasMaxSymbolsError = meta.error && meta.error.includes('maximum symbols')\r\n    let hasError = hasRequiredError || hasMaxSymbolsError\r\n    return(\r\n        <div className = {styles.fromControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <textarea {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport const LoginInput = ({input, meta, ...props}) => {\r\n    let hasRequiredError = meta.error && meta.error === 'This field is required' && meta.touched\r\n    let hasEmailDogError = input.name === 'email' && meta.error && meta.error.includes('email') && !meta.active\r\n    let hasError = hasRequiredError || hasEmailDogError\r\n    return(\r\n        <div className = {styles.fromControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <input {...input} {...props}/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n} ","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { fieldIsRequired, fieldIsFullCreator } from '../../../validation/validation';\r\nimport { DialogsTextArea } from '../../Common/FormComponents';\r\n\r\nconst Max30symbols = fieldIsFullCreator(30);\r\n\r\nconst MessageTextForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <Field name = \"messageBody\"\r\n                   component = {DialogsTextArea}\r\n                   placeholder = \"write a message\" \r\n                   validate = {[fieldIsRequired, Max30symbols]}/>\r\n            <button>send message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({ form: 'dialogMessage' })(MessageTextForm)\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.path;\r\n    return (\r\n      <div className={classes.dialogItem}>\r\n          <NavLink to = {path} activeClassName = {classes.active}>{props.name}</NavLink>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n      <div>\r\n          {props.message}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let onSendMessage = (form) => {\r\n        props.sendMessage(form.messageBody);\r\n    }\r\n   \r\n    let dialogs = props.dialogsPage.dialogUsers.map(d => <DialogItem name = {d.name} \r\n                                                                     path = {d.id}/>)\r\n    let messages = props.dialogsPage.messageData.map(m => <Dialog message = {m.message} />)\r\n\r\n    return (\r\n    <div className = {classes.dialog_wrapper}>\r\n        <div className={classes.dialogItems}>\r\n            { dialogs }\r\n        </div>\r\n        <div className={classes.dialog}>\r\n            { messages }\r\n            <MessageReduxForm onSubmit = {onSendMessage} />\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isAuthRequested: state.auth.isAuthRequested\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if (!this.props.isAuth && this.props.isAuthRequested && !this.props.match.params.userId) return <Redirect to = {\"/login\"} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let RedirectContainer = connect(mapStateToProps)(RedirectComponent)\r\n    return RedirectContainer\r\n}","import { addMessageActionCreator } from '../../../redux/dialogs_reducer';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../HOC/withAuthRedirect';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { reset } from 'redux-form';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (messageBody) => {\r\n            dispatch(addMessageActionCreator(messageBody))\r\n            dispatch(reset('dialogMessage'))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(Dialogs)","import React from 'react';\r\nimport preloader from './../../pictures/preloader.gif'\r\n\r\nconst Preloader = (props) => {\r\n    return (<div  style = {{width: 10}}>\r\n        <img src={preloader} alt=\"Loaging\" />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, { useState } from 'react';\r\nimport styles from './Pagination.module.css'\r\n\r\nconst Pagination = (props) => {\r\n    let pagesCount = Math.ceil(props.totalItems / props.itemsOnPage)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)     \r\n    }\r\n    let [currentPortion, setCurrentPortion] = useState(1)\r\n    let leftPositionPageNumber  = ( currentPortion - 1 ) * props.portionSize + 1\r\n    let rightPositionPageNumber = currentPortion * props.portionSize\r\n    let portionsCount = Math.ceil(pages.length / props.portionSize) \r\n    return <div>\r\n            {currentPortion > 1 &&\r\n            <button className = {styles.paginationButton} \r\n                    onClick = {() => {setCurrentPortion(currentPortion - 1)}}>prev\r\n            </button>}\r\n\r\n            {pages.filter((p) => (p >= leftPositionPageNumber && p <= rightPositionPageNumber)).map(p =>\r\n                <span className={props.currentPage === p && styles.activePage}\r\n                    onClick={(e) => props.getUsersOnClick(p)}>{p} </span>)}\r\n\r\n            {currentPortion < portionsCount &&\r\n            <button className = {styles.paginationButton} \r\n                    onClick = {() => {setCurrentPortion(currentPortion + 1)}}>next\r\n            </button>}\r\n        </div>\r\n}\r\n\r\nexport default Pagination","import React from 'react';\r\nimport styles from './Users.module.css'\r\nimport user_man from './../../../pictures/user_man.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst User = ({ user, FetchingFollowDisable, followUnFollow }) => {\r\n\r\n    return <div className={styles.item} >\r\n        <NavLink to={'/profile/' + user.id} >\r\n            <img src={user.photos.small === null ? user_man : user.photos.small} alt=\"No\" />\r\n        </NavLink>\r\n        {user.name}\r\n        <br />\r\n        <button disabled={FetchingFollowDisable.some(id => id === user.id)}\r\n            onClick={() => { followUnFollow(user.id, user.followed) }}>\r\n            {user.followed ? 'Unfollow' : 'Follow'}\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Pagination from '../../Common/Pagination';\r\nimport User from './User';\r\n\r\nconst Users = (props) => {\r\n\r\n    return <div>\r\n        <Pagination totalItems={props.totalUsers} itemsOnPage={props.itemsOnPage}\r\n            currentPage={props.currentPage} getUsersOnClick={props.getUsersOnClick}\r\n            portionSize = {10} />\r\n        {\r\n            props.users.map(u =>\r\n                <User user={u} FetchingFollowDisable={props.FetchingFollowDisable}\r\n                    followUnFollow={props.followUnFollow} />\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, followUnFollow } from '../../../redux/friends_reducer';\r\nimport Preloader from '../../Common/Preloader';\r\nimport Users from './Users';\r\n\r\nclass UsersContainer extends React.Component{\r\n    componentDidMount(){\r\n        this.props.getUsers(/*this.props.currentPage*/1, this.props.itemsOnPage)\r\n    }\r\n\r\n    getUsersOnClick = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.itemsOnPage)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                getUsersOnClick={this.getUsersOnClick}\r\n                followUnFollow={this.props.followUnFollow}\r\n                totalUsers={this.props.totalUsers}\r\n                itemsOnPage={this.props.itemsOnPage}\r\n                FetchingFollowDisable={this.props.FetchingFollowDisable}\r\n            />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        users:                  state.friendsPage.users,\r\n        currentPage:            state.friendsPage.currentPage,\r\n        itemsOnPage:            state.friendsPage.itemsOnPage,\r\n        totalUsers:             state.friendsPage.totalUsers,\r\n        isFetching:             state.friendsPage.isFetching,\r\n        FetchingFollowDisable:  state.friendsPage.FetchingFollowDisable,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    getUsers,\r\n    followUnFollow\r\n})(UsersContainer);","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div className = {classes.post}>\r\n        <img alt = \"Картинка не грузит\" src=\"https://i.pinimg.com/originals/4d/af/2f/4daf2f183af331a8ba9a12bc2a458486.jpg\"/>\r\n        {props.message}\r\n        <div>\r\n            <span>likes: </span> {props.likes}\r\n        </div>\r\n    \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyWall.module.css'\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst PostTextForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"postText\" component=\"textarea\" type=\"text\" placeholder='Whats going on?' />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({ form: 'wallPost' })(PostTextForm)\r\n\r\nconst MyWall = (props) => {\r\n    const onAddPost = (form) => {\r\n        props.addPost(form.postText);\r\n    }\r\n    let posts = props.posts.map(post => <Post message = {post.message} likes = {post.like} />);\r\n    return (\r\n    <div className = {classes.wall}>\r\n        <PostReduxForm onSubmit = {onAddPost} />\r\n        <div className = {classes.posts}>\r\n            {posts}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MyWall;","import { addPostActionCreator } from '../../../../redux/profile_reducer';\r\nimport MyWall from './MyWall';\r\nimport { connect } from 'react-redux';\r\nimport { reset } from 'redux-form';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts:            state.profilePage.postData,\r\n    newMessageText:   state.profilePage.newMessageText \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (form) => {\r\n      dispatch(addPostActionCreator(form))\r\n      dispatch(reset('wallPost'))\r\n    },\r\n  }\r\n}\r\nconst MyWallContainer = connect(mapStateToProps, mapDispatchToProps)(MyWall);\r\n\r\nexport default MyWallContainer;","import React from 'react';\r\nimport classes from './Profile.module.css'\r\nimport UserPhoto from '../../../pictures/user_man.png'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst UserInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [statusBody, changeStatusBody] = useState(props.status)\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n    const onChangeStatus = (e) => {\r\n        changeStatusBody(e.currentTarget.value)\r\n    }\r\n    const onUpdateStatus = () => {\r\n        props.updateUserStatus(statusBody)\r\n        setEditMode(false)\r\n    }\r\n    useEffect(() => {\r\n        changeStatusBody(props.status)\r\n    }, [props.status, editMode])\r\n    return (\r\n        <div className={classes.userInfo}>\r\n            <img alt=\"Картинка не грузит\" src={\r\n                props.profileData.photos.large ? props.profileData.photos.large : UserPhoto\r\n            } />\r\n            <p>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onClick={activateEditMode}>{props.status || 'set your status'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div onMouseLeave={deactivateEditMode} className={classes.editStatus}>\r\n                        <div>\r\n                            <input onChange={onChangeStatus} autoFocus={true} value={statusBody} />\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={onUpdateStatus}>Update status</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className={classes.name}>{props.profileData.fullName}</div>\r\n                <div className={classes.contacts}>{props.profileData.aboutMe}</div>\r\n                <div className={classes.contacts}>Contacts:</div>\r\n                <div className={classes.contact}>Facebook:  {props.profileData.facebook}</div>\r\n                <div className={classes.contact}>VK:        {props.profileData.vk}</div>\r\n                <div className={classes.contact}>Twitter:   {props.profileData.twitter}</div>\r\n                <div className={classes.contact}>Instagram: {props.profileData.instagram}</div>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default UserInfo;","import React from 'react';\r\nimport classes from './Profile.module.css'\r\nimport MyWallContainer from './MyWall/MyWallContainer';\r\nimport UserInfo from './UserInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n    <div className = {classes.profile}>\r\n        <UserInfo profileData = {props.profilePage.profileData} status = {props.profilePage.status} updateUserStatus = {props.updateUserStatus} />\r\n        <MyWallContainer />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","export const getProfilePage = (state) => {\r\n    return state.profilePage\r\n}\r\nexport const getUserId = (state) => {\r\n    return state.auth.userId\r\n}\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getIsAuthRequested = (state) => {\r\n    return state.auth.isAuthRequested\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Profile from './Profile';\r\nimport { requestProfilePage, getUserStatus, updateUserStatus } from '../../../redux/profile_reducer';\r\nimport Preloader from '../../Common/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../HOC/withAuthRedirect';\r\nimport { getProfilePage, getIsAuthRequested, getIsAuth, getUserId } from '../../../redux/selectors';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        if (this.props.isAuth) {\r\n            this.props.requestProfilePage(this.props.match.params.userId\r\n                ? this.props.match.params.userId\r\n                : this.props.authId)\r\n            this.props.getUserStatus(this.props.match.params.userId\r\n                ? this.props.match.params.userId\r\n                : this.props.authId)\r\n        } else if (this.props.match.params.userId) {\r\n            this.props.requestProfilePage(this.props.match.params.userId)\r\n            this.props.getUserStatus(this.props.match.params.userId)\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId && !this.props.match.params.userId) {\r\n            this.props.requestProfilePage(this.props.authId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.profilePage.isFetching ? <Preloader/> : <Profile profilePage={this.props.profilePage} updateUserStatus = {this.props.updateUserStatus} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        profilePage: getProfilePage(state), \r\n        authId: getUserId(state),\r\n        isAuth: getIsAuth(state),\r\n        isAuthRequested: getIsAuthRequested(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {requestProfilePage, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <p>Главная страница</p>\r\n            <img alt=\"Картинка не грузит\" className='logo' src='https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/NASA_logo.svg/200px-NASA_logo.svg.png' />\r\n            <div>{props.isAuth\r\n                ? <div>{props.login} - <NavLink to=\"/login\" onClick = {props.logout}>logout</NavLink></div> \r\n                : <NavLink to={'/login'}>login</NavLink>}</div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, logout } from '../../redux/auth_reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    login:  state.auth.login,\r\n    userId: state.auth.userId,\r\n    email:  state.auth.email,\r\n    isAuth:  state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuth, logout})(HeaderContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth_reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { LoginInput } from '../Common/FormComponents';\r\nimport { fieldIsRequired, emailFieldIncludeDog } from '../../validation/validation';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"email\"\r\n                    component={LoginInput}\r\n                    placeholder=\"Email\"\r\n                    validate={[fieldIsRequired, emailFieldIncludeDog]} />\r\n            </div>\r\n            <div>\r\n                <Field name=\"password\"\r\n                    component={LoginInput}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    validate={[fieldIsRequired]} />\r\n            </div>\r\n            <div>\r\n                <Field name=\"rememberMe\"\r\n                    component={LoginInput}\r\n                    type=\"checkbox\" /> Remember me\r\n        </div>\r\n            {props.error && <div>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst LoginPage = (props) => {\r\n    const submitForm = (form) => {\r\n        props.login(form)\r\n    } \r\n    if (props.isAuth){\r\n        return <Redirect to = {\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit = {submitForm} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isAuthRequested: state.auth.isAuthRequested\r\n})\r\n\r\n/*const mapDispatchToProps = (dispatch) => ({\r\n    login = (form) => {\r\n        dispatch(login(form))\r\n    }\r\n})\r\n*/\r\nexport default connect(mapStateToProps, {login})(LoginPage)","import React from 'react';\nimport classes from './App.module.css';\nimport Nav from './modules/Navbar/nav';\nimport { Route } from 'react-router-dom';\nimport DialogsContainer from './modules/Content/Dialogs/DialogsContainer';\nimport UsersContainer from './modules/Content/Users/UsersContainer';\nimport ProfileContainer from './modules/Content/Profile/ProfileContainer';\nimport HeaderContainer from './modules/Header/HeaderContainer';\nimport LoginPage from './modules/Login/Login';\nimport { login } from './redux/auth_reducer';\nimport { connect } from 'react-redux';\nimport { initialApp } from './redux/initial_reducer';\nimport Preloader from './modules/Common/Preloader';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initialApp()\n  }\n  render() {\n    if (!this.props.initialized) return <Preloader />\n    return (\n      <div className={classes.app_wrapper} >\n        <HeaderContainer />\n        <div className={classes.page}>\n          <Nav />\n          <div className={classes.app_wrapper_content}>\n            <Route path='/dialogs' render={() => <DialogsContainer />} />\n            <Route path='/users' render={() => <UsersContainer />} />\n            <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n            <Route path='/login' render={() => <LoginPage login={login} />} />\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.initial.initialized\n})\nexport default connect(mapStateToProps,{initialApp})(App);\n","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux_store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n<BrowserRouter basename = {process.env.PUBLIC_URL}>\n    <Provider store = {store}>\n        <App state = {store.getState()} dispatch = {store.dispatch.bind(store)}/>\n    </Provider>\n</BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_wrapper\":\"Dialogs_dialog_wrapper__3A2B8\",\"dialogItems\":\"Dialogs_dialogItems__2B40G\",\"dialogItem\":\"Dialogs_dialogItem__1lcy3\",\"active\":\"Dialogs_active__16drR\",\"dialog\":\"Dialogs_dialog__1UoF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fromControl\":\"FormComponents_fromControl__33Qyo\",\"error\":\"FormComponents_error__kzjPg\"};","module.exports = __webpack_public_path__ + \"static/media/user_man.d48a8973.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_wrapper\":\"App_app_wrapper__3nKqg\",\"page\":\"App_page__2jXPb\",\"app_wrapper_content\":\"App_app_wrapper_content__3_p02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"Pagination_activePage__K5LrU\",\"paginationButton\":\"Pagination_paginationButton__3LjTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"MyWall_wall__1J0Co\",\"posts\":\"MyWall_posts__bBCkm\"};"],"sourceRoot":""}